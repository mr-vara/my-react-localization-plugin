name: Localization Workflow

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  update-translations:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Install gettext utilities
        run: sudo apt-get update && sudo apt-get install -y gettext

      - name: Install Axios for API requests
        run: npm install axios

      - name: Install Gettext Parser
        run: npm install gettext-parser

      - name: Extract Translatable Strings
        run: wp i18n make-pot . languages/my-react-localization-plugin.pot

      - name: Ensure .po Files Exist
        run: |
          LANGUAGES=(fr_FR es_ES de_DE)
          for LANG in "${LANGUAGES[@]}"; do
            if [ ! -f languages/my-react-localization-plugin-$LANG.po ]; then
              msginit --input=languages/my-react-localization-plugin.pot --locale=$LANG --output-file=languages/my-react-localization-plugin-$LANG.po --no-translator
            fi
          done

      - name: Create Translation Script
        run: |
          cat << 'EOF' > fill_missing_translations.mjs
          import fs from 'fs';
          import axios from 'axios';
          import gettextParser from 'gettext-parser';

          const languages = ['fr_FR', 'es_ES', 'de_DE'];
          const potFile = fs.readFileSync('languages/my-react-localization-plugin.pot');
          const pot = gettextParser.po.parse(potFile);

          languages.forEach(async (lang) => {
            const poPath = `languages/my-react-localization-plugin-${lang}.po`;
            let poFile = fs.readFileSync(poPath);
            let po = gettextParser.po.parse(poFile);

            for (let msgid in pot.translations['']) {
              if (msgid && (!po.translations[''][msgid] || !po.translations[''][msgid].msgstr[0])) {
                const textToTranslate = msgid;
                try {
                  const response = await axios.post('https://libretranslate.com/translate', {
                    q: textToTranslate,
                    source: 'en',
                    target: lang.split('_')[0],
                    format: 'text'
                  });

                  po.translations[''][msgid] = po.translations[''][msgid] || { msgid: msgid, msgstr: [''] };
                  po.translations[''][msgid].msgstr[0] = response.data.translatedText;
                } catch (error) {
                  console.error(`Translation failed for ${msgid}:`, error.message);
                }
              }
            }

            const updatedPo = gettextParser.po.compile(po);
            fs.writeFileSync(poPath, updatedPo);
          });
          EOF

      - name: Identify and Fill Missing Translations
        run: |
          node fill_missing_translations.mjs

      - name: Compile .po to .mo Files
        run: |
          for PO_FILE in languages/*.po; do
            MO_FILE="${PO_FILE%.po}.mo"
            msgfmt "$PO_FILE" --output-file="$MO_FILE"
          done

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add languages/*.po languages/*.mo
          git commit -m 'Update translations' || echo "No changes to commit"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git HEAD:main

      - name: Clean up Node Modules
        run: rm -rf node_modules
